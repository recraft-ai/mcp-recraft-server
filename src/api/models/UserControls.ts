/* tslint:disable */
/* eslint-disable */
/**
 * recraft.ai external api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ImageColor } from './ImageColor';
import {
    ImageColorFromJSON,
    ImageColorFromJSONTyped,
    ImageColorToJSON,
    ImageColorToJSONTyped,
} from './ImageColor';

/**
 * 
 * @export
 * @interface UserControls
 */
export interface UserControls {
    /**
     * 
     * @type {Array<ImageColor>}
     * @memberof UserControls
     */
    colors?: Array<ImageColor>;
    /**
     * 
     * @type {ImageColor}
     * @memberof UserControls
     */
    backgroundColor?: ImageColor;
    /**
     * 
     * @type {number}
     * @memberof UserControls
     */
    artisticLevel?: number;
    /**
     * 
     * @type {boolean}
     * @memberof UserControls
     */
    noText?: boolean;
}

/**
 * Check if a given object implements the UserControls interface.
 */
export function instanceOfUserControls(value: object): value is UserControls {
    return true;
}

export function UserControlsFromJSON(json: any): UserControls {
    return UserControlsFromJSONTyped(json, false);
}

export function UserControlsFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserControls {
    if (json == null) {
        return json;
    }
    return {
        
        'colors': json['colors'] == null ? undefined : ((json['colors'] as Array<any>).map(ImageColorFromJSON)),
        'backgroundColor': json['background_color'] == null ? undefined : ImageColorFromJSON(json['background_color']),
        'artisticLevel': json['artistic_level'] == null ? undefined : json['artistic_level'],
        'noText': json['no_text'] == null ? undefined : json['no_text'],
    };
}

export function UserControlsToJSON(json: any): UserControls {
    return UserControlsToJSONTyped(json, false);
}

export function UserControlsToJSONTyped(value?: UserControls | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'colors': value['colors'] == null ? undefined : ((value['colors'] as Array<any>).map(ImageColorToJSON)),
        'background_color': ImageColorToJSON(value['backgroundColor']),
        'artistic_level': value['artisticLevel'],
        'no_text': value['noText'],
    };
}

