/* tslint:disable */
/* eslint-disable */
/**
 * recraft.ai external api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * 
 * @export
 */
export const ImageSubStyle = {
    _2dArtPoster: '2d_art_poster',
    _3d: '3d',
    _80s: '80s',
    Glow: 'glow',
    Grain: 'grain',
    HandDrawn: 'hand_drawn',
    InfantileSketch: 'infantile_sketch',
    Kawaii: 'kawaii',
    PixelArt: 'pixel_art',
    Psychedelic: 'psychedelic',
    Seamless: 'seamless',
    Voxel: 'voxel',
    Watercolor: 'watercolor',
    BrokenLine: 'broken_line',
    ColoredOutline: 'colored_outline',
    ColoredShapes: 'colored_shapes',
    ColoredShapesGradient: 'colored_shapes_gradient',
    DoodleFill: 'doodle_fill',
    DoodleOffsetFill: 'doodle_offset_fill',
    OffsetFill: 'offset_fill',
    Outline: 'outline',
    OutlineGradient: 'outline_gradient',
    Cartoon: 'cartoon',
    DoodleLineArt: 'doodle_line_art',
    Engraving: 'engraving',
    Flat2: 'flat_2',
    LineArt: 'line_art',
    Linocut: 'linocut',
    BAndW: 'b_and_w',
    Enterprise: 'enterprise',
    HardFlash: 'hard_flash',
    Hdr: 'hdr',
    MotionBlur: 'motion_blur',
    NaturalLight: 'natural_light',
    StudioPortrait: 'studio_portrait',
    LineCircuit: 'line_circuit',
    _2dArtPoster2: '2d_art_poster_2',
    EngravingColor: 'engraving_color',
    HandDrawnOutline: 'hand_drawn_outline',
    Handmade3d: 'handmade_3d',
    Plastic: 'plastic',
    Pictogram: 'pictogram',
    Antiquarian: 'antiquarian',
    BoldFantasy: 'bold_fantasy',
    ChildBook: 'child_book',
    Cover: 'cover',
    Crosshatch: 'crosshatch',
    DigitalEngraving: 'digital_engraving',
    Expressionism: 'expressionism',
    FreehandDetails: 'freehand_details',
    Grain20: 'grain_20',
    GraphicIntensity: 'graphic_intensity',
    HardComics: 'hard_comics',
    LongShadow: 'long_shadow',
    ModernFolk: 'modern_folk',
    Multicolor: 'multicolor',
    NeonCalm: 'neon_calm',
    Noir: 'noir',
    NostalgicPastel: 'nostalgic_pastel',
    OutlineDetails: 'outline_details',
    PastelGradient: 'pastel_gradient',
    PastelSketch: 'pastel_sketch',
    PopArt: 'pop_art',
    PopRenaissance: 'pop_renaissance',
    StreetArt: 'street_art',
    TabletSketch: 'tablet_sketch',
    UrbanGlow: 'urban_glow',
    UrbanSketching: 'urban_sketching',
    YoungAdultBook: 'young_adult_book',
    YoungAdultBook2: 'young_adult_book_2',
    EveningLight: 'evening_light',
    FadedNostalgia: 'faded_nostalgia',
    ForestLife: 'forest_life',
    MysticNaturalism: 'mystic_naturalism',
    NaturalTones: 'natural_tones',
    OrganicCalm: 'organic_calm',
    RealLifeGlow: 'real_life_glow',
    RetroRealism: 'retro_realism',
    RetroSnapshot: 'retro_snapshot',
    UrbanDrama: 'urban_drama',
    VillageRealism: 'village_realism',
    WarmFolk: 'warm_folk',
    BoldStroke: 'bold_stroke',
    Chemistry: 'chemistry',
    ColoredStencil: 'colored_stencil',
    Cosmics: 'cosmics',
    Cutout: 'cutout',
    Depressive: 'depressive',
    Editorial: 'editorial',
    EmotionalFlat: 'emotional_flat',
    MarkerOutline: 'marker_outline',
    Mosaic: 'mosaic',
    Naivector: 'naivector',
    RoundishFlat: 'roundish_flat',
    SegmentedColors: 'segmented_colors',
    SharpContrast: 'sharp_contrast',
    Thin: 'thin',
    VectorPhoto: 'vector_photo',
    VividShapes: 'vivid_shapes',
    EmblemGraffiti: 'emblem_graffiti',
    EmblemPopArt: 'emblem_pop_art',
    EmblemPunk: 'emblem_punk',
    EmblemStamp: 'emblem_stamp',
    EmblemVintage: 'emblem_vintage'
} as const;
export type ImageSubStyle = typeof ImageSubStyle[keyof typeof ImageSubStyle];


export function instanceOfImageSubStyle(value: any): boolean {
    for (const key in ImageSubStyle) {
        if (Object.prototype.hasOwnProperty.call(ImageSubStyle, key)) {
            if (ImageSubStyle[key as keyof typeof ImageSubStyle] === value) {
                return true;
            }
        }
    }
    return false;
}

export function ImageSubStyleFromJSON(json: any): ImageSubStyle {
    return ImageSubStyleFromJSONTyped(json, false);
}

export function ImageSubStyleFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImageSubStyle {
    return json as ImageSubStyle;
}

export function ImageSubStyleToJSON(value?: ImageSubStyle | null): any {
    return value as any;
}

export function ImageSubStyleToJSONTyped(value: any, ignoreDiscriminator: boolean): ImageSubStyle {
    return value as ImageSubStyle;
}

